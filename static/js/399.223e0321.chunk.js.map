{"version":3,"file":"static/js/399.223e0321.chunk.js","mappings":"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","sources":["api/hooks/auth.mock.ts","api/hooks/categories.mock.ts","api/hooks/products.mock.ts","api/hooks/wish.mock.ts","mocks/browser.ts"],"sourcesContent":["// authMockHandler.ts\nimport { rest } from 'msw';\n\nimport { BASE_URL } from '@/api/instance/index';\n\nimport { getLoginPath } from './useGetLogin';\n\nexport const authMockHandler = [\n  rest.post(getLoginPath(), (req, res, ctx) => {\n    const { email, password } = req.body as { email: string; password: string };\n\n    if (email === '1234@kakao.com' && password === '1234') {\n      return res(ctx.status(200), ctx.json(LOGIN_RESPONSE_SUCCESS));\n    } else {\n      return res(ctx.status(401), ctx.json(LOGIN_RESPONSE_ERROR));\n    }\n  }),\n  rest.post(`${BASE_URL}/api/members/register`, (req, res, ctx) => {\n    const { email, password } = req.body as { email: string; password: string };\n\n    if (email && password) {\n      return res(\n        ctx.status(201),\n        ctx.json({\n          email: email,\n          token: 'abcdefg',\n        }),\n      );\n    } else {\n      return res(\n        ctx.status(400),\n        ctx.json({\n          message: 'Invalid input.',\n        }),\n      );\n    }\n  }),\n];\n\nconst LOGIN_RESPONSE_SUCCESS = {\n  email: '1234@kakao.com',\n  token: 'abcdefg',\n};\n\nconst LOGIN_RESPONSE_ERROR = {\n  errorCode: 'InvalidCredentials',\n  message: '유효하지 않은 이메일(또는 비밀번호)입니다.',\n};\n","import { rest } from 'msw';\n\nimport { getCategoriesPath } from './useGetCategorys';\n\nexport const categoriesMockHandler = [\n  rest.get(getCategoriesPath(), (_, res, ctx) => {\n    return res(ctx.json(CATEGORIES_RESPONSE_DATA));\n  }),\n];\n\nconst CATEGORIES_RESPONSE_DATA = [\n  {\n    categoryId: 2920,\n    label: '생일',\n    title: '감동을 높여줄 생일 선물 리스트',\n    backgroundColor: '#5949a3',\n    imageUrl:\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\n  },\n  {\n    categoryId: 2930,\n    label: '교환권',\n    title: '놓치면 후회할 교환권 특가',\n    backgroundColor: '#9290C3',\n    imageUrl:\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\n  },\n];\n","import { rest } from 'msw';\n\nimport { getProductDetailPath } from './useGetProductDetail';\nimport { getProductOptionsPath } from './useGetProductOptions';\nimport { getProductsPath } from './useGetProducts';\n\nexport const productsMockHandler = [\n  rest.get(\n    getProductsPath({\n      categoryId: '2920',\n    }),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(\n    getProductsPath({\n      categoryId: '2930',\n    }),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(getProductDetailPath(':productId'), (_, res, ctx) => {\n    return res(ctx.json(PRODUCTS_MOCK_DATA.content[0]));\n  }),\n  rest.get(getProductOptionsPath(':productId'), (_, res, ctx) => {\n    return res(\n      ctx.json([\n        {\n          id: 1,\n          name: 'Option A',\n          quantity: 10,\n          productId: 1,\n        },\n        {\n          id: 2,\n          name: 'Option B',\n          quantity: 20,\n          productId: 1,\n        },\n      ]),\n    );\n  }),\n];\n\nconst PRODUCTS_MOCK_DATA = {\n  content: [\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n    {\n      id: 1181831,\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n      price: 122000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n  ],\n  number: 0,\n  totalElements: 5,\n  size: 10,\n  last: true,\n};\n","import { rest } from 'msw';\n\nimport { BASE_URL } from '@/api/instance/index';\n\nimport { getWishlistPath } from './useGetWish';\n\nexport const wishlistMockHandler = [\n  rest.get(getWishlistPath({ page: 0, size: 10, sort: 'createdDate,desc' }), (_, res, ctx) => {\n    return res(ctx.json(WISHLIST_RESPONSE_DATA));\n  }),\n  rest.delete(`${BASE_URL}/api/wishes/:wishId`, (req, res, ctx) => {\n    const { wishId } = req.params;\n    return res(\n      ctx.status(202),\n      ctx.json({ message: `Wishlist item with id ${wishId} deleted successfully.` }),\n    );\n  }),\n];\n\nconst WISHLIST_RESPONSE_DATA = {\n  content: [\n    {\n      id: 1,\n      product: {\n        id: 3245119,\n        name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n        price: 145000,\n        imageUrl:\n          'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      },\n    },\n    {\n      id: 2,\n      product: {\n        id: 2263833,\n        name: '외식 통합권 10만원권',\n        price: 100000,\n        imageUrl:\n          'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      },\n    },\n  ],\n  pageable: {\n    sort: {\n      sorted: true,\n      unsorted: false,\n      empty: false,\n    },\n    pageNumber: 0,\n    pageSize: 10,\n    offset: 0,\n    unpaged: false,\n    paged: true,\n  },\n  totalPages: 5,\n  totalElements: 50,\n  last: false,\n  number: 0,\n  size: 10,\n  numberOfElements: 2,\n  first: true,\n  empty: false,\n};\n","import { setupWorker } from 'msw';\n\nimport { authMockHandler } from '@/api/hooks/auth.mock';\nimport { categoriesMockHandler } from '@/api/hooks/categories.mock';\nimport { productsMockHandler } from '@/api/hooks/products.mock';\nimport { wishlistMockHandler } from '@/api/hooks/wish.mock';\n\nexport const worker = setupWorker(\n  ...categoriesMockHandler,\n  ...productsMockHandler,\n  ...wishlistMockHandler,\n  ...authMockHandler,\n);\n"],"names":["authMockHandler","rest","post","getLoginPath","req","res","ctx","email","password","body","status","json","LOGIN_RESPONSE_SUCCESS","LOGIN_RESPONSE_ERROR","concat","BASE_URL","token","message","errorCode","categoriesMockHandler","get","getCategoriesPath","_","CATEGORIES_RESPONSE_DATA","categoryId","label","title","backgroundColor","imageUrl","productsMockHandler","getProductsPath","PRODUCTS_MOCK_DATA","getProductDetailPath","content","getProductOptionsPath","id","name","quantity","productId","price","number","totalElements","size","last","wishlistMockHandler","getWishlistPath","page","sort","WISHLIST_RESPONSE_DATA","delete","wishId","params","product","pageable","sorted","unsorted","empty","pageNumber","pageSize","offset","unpaged","paged","totalPages","numberOfElements","first","worker","setupWorker"],"sourceRoot":""}